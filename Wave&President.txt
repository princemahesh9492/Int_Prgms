/*
 * Click `Run` to execute the snippet below!
 */

import java.io.*;
import java.util.*;

/*
 * To execute Java, please define "static void main" on a class
 * named Solution.
 *
 * If you need more classes, simply define them inline.
 */

  //int[] arr = {10, 5, 6, 3, 2, 20, 100, 80};
   // Answer : arr[] = {10, 5, 6, 2, 20, 3, 100, 80} OR {20, 5, 10, 2, 80, 6, 100, 3}

class Solution {
  public static void main(String[] args) {
   int[] arr = {10, 5, 6, 3, 2, 20, 100, 80};
   System.out.println(Arrays.toString(arr));
   waveForm(arr);
   System.out.println(Arrays.toString(arr));
  }
  public static void waveForm(int[] arr){

    for(int i=0;i<arr.length;i++){

    if(i%2==0 && i+1<arr.length && arr[i]<arr[i+1]){
      swap(arr,i,i+1);
    }
    else if(i%2==1 && i+1<arr.length && arr[i]>arr[i+1]){
      swap(arr,i,i+1);
    }

    }

  }

  public static void swap(int[] arr,int i, int j){
  
      int temp=arr[i];
      arr[i]=arr[j];
      arr[j]=temp;
    
    }

}

=======================================================================================================



import java.util.ArrayList;
import java.util.List;

public class PresidentElection {
    public static void main(String[] args) {
        int n = 4; // number of students
        int k = 3; // length of the song
        int president = findPresident(n, k);
        System.out.println("The elected president of students is: " + president);
    }

    public static int findPresident(int n, int k) {

        // list of students given creation
        List<Integer> students = new ArrayList<>();
        for (int i = 1; i <= n; i++) {
            students.add(i);
        }

        // starting position of the circle
        int index = 0;

        // While there's more than one student in the circle
        while (students.size() > 1) {

            // Find the next index to remove
            index = (index + k - 1) % students.size(); // k-1 because index is 0-based

            //index = k-1;
            students.remove(index); // Remove the student
        }

        // The last remaining student/elected president
        return students.get(0);
    }
}

=============================================================================================================

